name: Java CI/CD Security Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 2 * * 0'

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build application
        run: mvn clean compile -DskipTests

      # SAST - Static Application Security Testing
      - name: Run SpotBugs SAST
        run: |
          mvn spotbugs:spotbugs
          mvn spotbugs:check
        continue-on-error: true

      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: spotbugs-report
          path: target/spotbugs.xml

      # SCA - Software Composition Analysis
      - name: OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check -Dformat=HTML -Dformat=JSON
        continue-on-error: true

      - name: Upload Dependency Check report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-check-report
          path: target/dependency-check-report.*

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        run: mvn test

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: target/surefire-reports/

  build-package:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [security-scan, unit-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: soa-backend-jar
          path: target/*.jar